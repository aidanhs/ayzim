environment:
  global:
    PROJECT_NAME: ayzim
  # TODO feel free to delete targets/channels you don't need
  matrix:
    - TARGET: x86_64-pc-windows-msvc
      CHANNEL: nightly-2017-03-03

# Install Rust and Cargo
# (Based on from https://github.com/rust-lang/libc/blob/master/appveyor.yml)
install:
  - curl -sSf -o rustup-init.exe https://win.rustup.rs
  - rustup-init.exe --default-host %TARGET% --default-toolchain %CHANNEL% -y
  - set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
  - rustc -Vv
  - cargo -V

# 'cargo test' takes care of building for us, so disable Appveyor's build stage. This prevents
# the "directory does not contain a project or solution file" error.
# source: https://github.com/starkat99/appveyor-rust/blob/master/appveyor.yml#L113
build: false

# Equivalent to Travis' `script` phase
test_script:
  - cargo build --verbose
  #- cargo run
  - cargo test

before_deploy:
  # Generate artifacts for release
  - cargo build --release
  - mkdir staging
  - copy target\release\ayzim-opt.exe staging
  - cd staging
  - 7z a ../%PROJECT_NAME%-%APPVEYOR_REPO_TAG_NAME%-%TARGET%.zip *
  - appveyor PushArtifact ../%PROJECT_NAME%-%APPVEYOR_REPO_TAG_NAME%-%TARGET%.zip

deploy:
  # All the zipped artifacts will be deployed
  artifact: /.*\.zip/
  auth_token:
    secure: lM/lp9IGWVitSz7rgek0dIsESHmlwRBSRoSXnsBe4Xhgzm0M4F9EN0cq5cy0xenH
  provider: GitHub
  # deploy when a new tag is pushed and only on the stable channel
  on:
    appveyor_repo_tag: true

branches:
  only:
    - master
    - /^\d+\.\d+\.\d+.*$/
